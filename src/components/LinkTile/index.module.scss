@import '../../_css/common';

.archiveBlock {
  position: relative;
}

.introContent {
  margin-bottom: calc(var(--base) * 2);

  @include mid-break {
    margin-bottom: calc(var(--base) * 2);
  }
}

// this is to make up for the space taken by the fixed header, since the scroll method does not accept an offset parameter
.scrollRef {
  position: absolute;
  left: 0;
  top: calc(var(--base) * -5);
  @include mid-break {
    top:  calc(var(--base) * -2);
  }
}

.resultCountWrapper {
  display: flex;
  margin-bottom: calc(var(--base) * 2);

  @include mid-break {
    margin-bottom: var(--base);
  }
}

.pageRange {
  margin-bottom: var(--base);

  @include mid-break {
    margin-bottom: var(--base);
  }
}

.list {
  position: relative;
}

.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  width: 100%;
  gap: var(--base) 40px;

  @include mid-break {
    grid-template-columns: repeat(6, 1fr);
    gap: calc(var(--base) / 2) var(--base);
  }
}

.column {
  grid-column-end: span 4;

  @include mid-break {
    grid-column-end: span 6;
  }

  @include small-break {
    grid-column-end: span 6;
  }
}

.tileOuter {
  position: relative;
  z-index: 1;
  height: 100%;
  min-height: 200px;
  display: flex;
  flex-direction: column;
  justify-content: end;
  border-radius: 1rem;
  overflow: hidden;

  @media screen and (max-width: 384px) {
    min-height: 100px;
  }
}

.tileOuter > img {
  filter: grayscale(1);
}

.tileOuter:hover > img {
  filter: grayscale(0);
}

.overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 2;
  top: 0;
  left: 0;
  transition-property: opacity;
  transition-duration: 0.3s;
  transition-timing-function: ease-in-out;
  opacity: 0.75;
}

a:hover .overlay {
  opacity: 0.1;
}

.tileInner {
  position: relative;
  z-index: 5;
  margin-top: 1rem;
  padding: 0.25rem 0.5rem 0.5rem 0.5rem;
  background-color: rgba(0, 0, 0, 0.6);
  color: rgb(235, 235, 235);
}

.pagination {
  margin-top: calc(var(--base) * 2);

  @include mid-break {
    margin-top: var(--base);
  }
}
